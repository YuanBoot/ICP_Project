# This is the CMakeCache file.
# For build in directory: /Users/gudbrand/Documents/C++/ICP_Project/build
# It was generated by CMake: /usr/local/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build shared libraries
BUILD_SHARED_LIBS:BOOL=OFF

//Choose the type of build, options are: None(CMAKE_CXX_FLAGS or
// CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.
CMAKE_BUILD_TYPE:STRING=

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=' '

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//make program
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/local/bin/cmakexbuild

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=' '

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=icp_project

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=' '

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If true, cmake will use relative paths in makefiles and projects.
CMAKE_USE_RELATIVE_PATHS:BOOL=OFF

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a library.
COCOA_FRAMEWORK:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Cocoa.framework

//Path to a library.
CORE_FOUNDATION_FRAMEWORK:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/CoreFoundation.framework

//Path to a library.
CORE_VIDEO_FRAMEWORK:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/CoreVideo.framework

//Value Computed by CMake
GLFW_BINARY_DIR:STATIC=/Users/gudbrand/Documents/C++/ICP_Project/build/libigl/nanogui/ext_build/glfw

//Build the GLFW documentation
GLFW_BUILD_DOCS:BOOL=OFF

//Build the GLFW example programs
GLFW_BUILD_EXAMPLES:BOOL=OFF

// 
GLFW_BUILD_INSTALL:BOOL=OFF

//Build the GLFW test programs
GLFW_BUILD_TESTS:BOOL=OFF

//Include internals in documentation
GLFW_DOCUMENT_INTERNALS:BOOL=OFF

//Generate installation target
GLFW_INSTALL:BOOL=OFF

//Value Computed by CMake
GLFW_SOURCE_DIR:STATIC=/Users/gudbrand/libigl/external/nanogui/ext/glfw

//Make glfwInit chdir to Contents/Resources
GLFW_USE_CHDIR:BOOL=ON

//Populate the menu bar on first window creation
GLFW_USE_MENUBAR:BOOL=ON

//Use the full resolution of Retina displays
GLFW_USE_RETINA:BOOL=ON

//Path to a library.
IOKIT_FRAMEWORK:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/IOKit.framework

//Path to a file.
LIBIGL_INCLUDE_DIR:PATH=/usr/local/include

//Use libigl as static library
LIBIGL_USE_STATIC_LIBRARY:BOOL=OFF

//Use AntTweakBar
LIBIGL_WITH_ANTTWEAKBAR:BOOL=OFF

//Use BBW
LIBIGL_WITH_BBW:BOOL=OFF

//Use CGAL
LIBIGL_WITH_CGAL:BOOL=OFF

//Use CoMiso
LIBIGL_WITH_COMISO:BOOL=OFF

//Use Cork
LIBIGL_WITH_CORK:BOOL=OFF

//Use Embree
LIBIGL_WITH_EMBREE:BOOL=OFF

//Use GLFW
LIBIGL_WITH_GLFW:BOOL=ON

//Use LIM
LIBIGL_WITH_LIM:BOOL=OFF

//Use Matlab
LIBIGL_WITH_MATLAB:BOOL=OFF

//Use MOSEK
LIBIGL_WITH_MOSEK:BOOL=OFF

//Use Nanogui menu
LIBIGL_WITH_NANOGUI:BOOL=ON

//Use OpenGL
LIBIGL_WITH_OPENGL:BOOL=ON

//Use PNG
LIBIGL_WITH_PNG:BOOL=OFF

//Use Python
LIBIGL_WITH_PYTHON:BOOL=OFF

//Use Tetgen
LIBIGL_WITH_TETGEN:BOOL=OFF

//Use Triangle
LIBIGL_WITH_TRIANGLE:BOOL=OFF

//Use OpenGL viewer
LIBIGL_WITH_VIEWER:BOOL=ON

//Use XML
LIBIGL_WITH_XML:BOOL=OFF

//Takes an empty string or 64. Directory where lib will be installed:
// lib or lib64
LIB_SUFFIX:STRING=

//Build NanoGUI example application?
NANOGUI_BUILD_EXAMPLE:BOOL=OFF

//Build a Python plugin for NanoGUI?
NANOGUI_BUILD_PYTHON:BOOL=OFF

//Build NanoGUI as a shared library?
NANOGUI_BUILD_SHARED:BOOL=OFF

//Install NanoGUI on `make install`?
NANOGUI_INSTALL:BOOL=ON

//Python version to use for compiling the Python plugin
NANOGUI_PYTHON_VERSION:STRING=

//Build a Python plugin for NanoGUI?
NANOGUI_USE_GLAD:BOOL=OFF

//Value Computed by CMake
NanoGUI_BINARY_DIR:STATIC=/Users/gudbrand/Documents/C++/ICP_Project/build/libigl/nanogui

//Value Computed by CMake
NanoGUI_SOURCE_DIR:STATIC=/Users/gudbrand/libigl/external/nanogui

//Include for OpenGL on OSX
OPENGL_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework

//OpenGL lib for OSX
OPENGL_gl_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework

//AGL lib for OSX
OPENGL_glu_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/AGL.framework

//Path to a file.
VULKAN_INCLUDE_DIR:PATH=VULKAN_INCLUDE_DIR-NOTFOUND

//Path to a library.
VULKAN_LIBRARY:FILEPATH=VULKAN_LIBRARY-NOTFOUND

//Path to a library.
cocoa_library:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/Cocoa.framework

//Path to a library.
corevideo_library:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/CoreVideo.framework

//Dependencies for target
glfw_LIB_DEPENDS:STATIC=

//Value Computed by CMake
icp_project_BINARY_DIR:STATIC=/Users/gudbrand/Documents/C++/ICP_Project/build

//Value Computed by CMake
icp_project_SOURCE_DIR:STATIC=/Users/gudbrand/Documents/C++/ICP_Project

//Path to a library.
iokit_library:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/IOKit.framework

//Value Computed by CMake
libigl_BINARY_DIR:STATIC=/Users/gudbrand/Documents/C++/ICP_Project/build/libigl

//Value Computed by CMake
libigl_SOURCE_DIR:STATIC=/Users/gudbrand/libigl/shared/cmake

//Dependencies for target
nanogui_LIB_DEPENDS:STATIC=

//Path to a library.
opengl_library:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework


########################
# INTERNAL cache entries
########################

//Stored Xcode object GUID
ALL_BUILD_GUID_CMAKE:INTERNAL=DDD008CFAFC34D90AD9D7110
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/gudbrand/Documents/C++/ICP_Project/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=0
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/usr/local/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/usr/local/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/usr/local/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Xcode
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Have symbol pthread_create
CMAKE_HAVE_LIBC_CREATE:INTERNAL=1
//Have include pthread.h
CMAKE_HAVE_PTHREAD_H:INTERNAL=1
//Start directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/gudbrand/Documents/C++/ICP_Project
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_LOCAL_GENERATORS:INTERNAL=5
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/usr/local/share/cmake-3.0
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_USE_RELATIVE_PATHS
CMAKE_USE_RELATIVE_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: COCOA_FRAMEWORK
COCOA_FRAMEWORK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CORE_FOUNDATION_FRAMEWORK
CORE_FOUNDATION_FRAMEWORK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CORE_VIDEO_FRAMEWORK
CORE_VIDEO_FRAMEWORK-ADVANCED:INTERNAL=1
//Details about finding OpenGL
FIND_PACKAGE_MESSAGE_DETAILS_OpenGL:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework][/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/System/Library/Frameworks/OpenGL.framework][v()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Test HAS_CPP11_FLAG
HAS_CPP11_FLAG:INTERNAL=1
//Test HAS_CPP14_FLAG
HAS_CPP14_FLAG:INTERNAL=1
//ADVANCED property for variable: IOKIT_FRAMEWORK
IOKIT_FRAMEWORK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_INCLUDE_DIR
OPENGL_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_gl_LIBRARY
OPENGL_gl_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENGL_glu_LIBRARY
OPENGL_glu_LIBRARY-ADVANCED:INTERNAL=1
//Stored Xcode object GUID
PROJECT_GLFW_GUID_CMAKE:INTERNAL=A40E6195251E4201BBCA3BCE
//Stored Xcode object GUID
PROJECT_NanoGUI_GUID_CMAKE:INTERNAL=4C7D2C0B4D18490B99633E4E
//Stored Xcode object GUID
PROJECT_icp_project_GUID_CMAKE:INTERNAL=95D499E9F067411ABA14B46B
//Stored Xcode object GUID
PROJECT_libigl_GUID_CMAKE:INTERNAL=E805BC37E7D7449786EB06C4
//ADVANCED property for variable: VULKAN_INCLUDE_DIR
VULKAN_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: VULKAN_LIBRARY
VULKAN_LIBRARY-ADVANCED:INTERNAL=1
//Stored Xcode object GUID
ZERO_CHECK_GUID_CMAKE:INTERNAL=775F0B932FD94780B0F5C81C
//Stored Xcode object GUID
bin2c_GUID_CMAKE:INTERNAL=F37752D073274C45A31A7604
//Stored Xcode object GUID
glfw_GUID_CMAKE:INTERNAL=543223C7E20E4FE1884BA8BC
//Stored Xcode object GUID
glfw_objects_GUID_CMAKE:INTERNAL=7BA2EE51BB36436FB218E67F
//Stored Xcode object GUID
icp_project_bin_GUID_CMAKE:INTERNAL=D6A88A962CE941B6894AA57F
//Stored Xcode object GUID
install_GUID_CMAKE:INTERNAL=D21E338F54704A52BD182CDE
//Stored Xcode object GUID
nanogui_GUID_CMAKE:INTERNAL=034E3B45AB654B7FBCC7EF16

